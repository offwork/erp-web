import { Injectable } from '@angular/core';
import {
  HttpEvent,
  HttpHandler,
  HttpInterceptor,
  HttpRequest,
  HttpResponse } from "@angular/common/http";

import { Store } from '@ngrx/store';

import {Observable} from "rxjs/Observable";
import "rxjs/add/operator/do";

@Injectable()
export class InterceptorService implements HttpInterceptor {

  private showSpinner: boolean;
  constructor(private store: Store<any>) {
    this.store
      .select('layout')
      .subscribe(res => this.showSpinner = res.spinnerListen);
  }

  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    this.showSpinner = true;
    this.store.dispatch({ type: '[Layout] Spinner Listen', payload: this.showSpinner });
    return next.handle(req).do((event: any) => {
      if (event instanceof HttpResponse) {
        console.log('SUCCESS INTERCEPTOR: ', event);
        this.showSpinner = false;
        this.store.dispatch({ type: '[Layout] Spinner Listen', payload: this.showSpinner });
      }
    });
  }
}
